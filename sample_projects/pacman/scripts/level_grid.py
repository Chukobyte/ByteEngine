from sample_projects.pacman.scripts.vector2 import Vector2


class LevelGrid:
    ENTITY_ID = "level"
    VALID_SPACE = "O"
    INVALID_SPACE = "X"
    VALID_SPACES = [
        (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 1), (12, 1), (15, 1), (16, 1), (17, 1), (18, 1), (19, 1), (20, 1), (21, 1), (22, 1), (23, 1), (24, 1), (25, 1), (26, 1),
        (1, 2), (6, 2), (12, 2), (15, 2), (21, 2), (26, 2),
        (1, 3), (6, 3), (12, 3), (15, 3), (21, 3), (26, 3),
        (1, 4), (6, 4), (12, 4), (15, 4), (21, 4), (26, 4),
        (1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5), (14, 5), (15, 5), (16, 5), (17, 5), (18, 5), (19, 5), (20, 5), (21, 5), (22, 5), (23, 5), (24, 5), (25, 5), (26, 5),
        (1, 6), (6, 6), (9, 6), (18, 6), (21, 6), (26, 6),
        (1, 7), (6, 7), (9, 7), (18, 7), (21, 7), (26, 7),
        (1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (9, 8), (10, 8), (11, 8), (12, 8), (15, 8), (16, 8), (17, 8), (18, 8), (21, 8), (22, 8), (23, 8), (24, 8), (25, 8), (26, 8),
        (6, 9), (12, 9), (15, 9), (21, 9),
        (6, 10), (12, 10), (15, 10), (21, 10),
        (6, 11), (9, 11), (10, 11), (11, 11), (12, 11), (13, 11), (14, 11), (15, 11), (16, 11), (17, 11), (18, 11), (21, 11),
        (6, 12), (9, 12), (18, 12), (21, 12),
        (6, 13), (9, 13), (18, 13), (21, 13),

        # Center pass lane
        (0, 14), (1, 14), (2, 14), (3, 14), (4, 14), (5, 14), (6, 14), (7, 14), (8, 14), (9, 14), (18, 14), (19, 14), (20, 14), (21, 14), (22, 14), (23, 14), (24, 14), (25, 14), (26, 14), (27, 14), (28, 14), (29, 14), (30, 14), (31, 14),

        (6, 15), (9, 15), (18, 15), (21, 15),
        (6, 16), (9, 16), (18, 16), (21, 16),
        (6, 17), (9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17), (17, 17), (18, 17), (21, 17),
        (6, 18), (9, 18), (18, 18), (21, 18),
        (6, 19), (9, 19), (18, 19), (21, 19),
        (1, 20), (2, 20), (3, 20), (4, 20), (5, 20), (6, 20), (7, 20), (8, 20), (9, 20), (10, 20), (11, 20), (12, 20), (15, 20), (16, 20), (17, 20), (18, 20), (19, 20), (20, 20), (21, 20), (22, 20), (23, 20), (24, 20), (25, 20), (26, 20),
        (1, 21), (6, 21), (12, 21), (15, 21), (21, 21), (26, 21),
        (1, 22), (6, 22), (12, 22), (15, 22), (21, 22), (26, 22),
        (1, 23), (2, 23), (3, 23), (6, 23), (7, 23), (8, 23), (9, 23), (10, 23), (11, 23), (12, 23), (13, 23), (14, 23), (15, 23), (16, 23), (17, 23), (18, 23), (19, 23), (20, 23), (21, 23), (24, 23), (25, 23), (26, 23),
        (3, 24), (6, 24), (9, 24), (18, 24), (21, 24), (24, 24),
        (3, 25), (6, 25), (9, 25), (18, 25), (21, 25), (24, 25),
        (1, 26), (2, 26), (3, 26), (4, 26), (5, 26), (6, 26), (9, 26), (10, 26), (11, 26), (12, 26), (15, 26), (16, 26), (17, 26), (18, 26), (21, 26), (22, 26), (23, 26), (24, 26), (25, 26), (26, 26),
        (1, 27), (12, 27), (15, 27), (26, 27),
        (1, 28), (12, 28), (15, 28), (26, 28),
        (1, 29), (2, 29), (3, 29), (4, 29), (5, 29), (6, 29), (7, 29), (8, 29), (9, 29), (10, 29), (11, 29), (12, 29), (13, 29), (14, 29), (15, 29), (16, 29), (17, 29), (18, 29), (19, 29), (20, 29), (21, 29), (22, 29), (23, 29), (24, 29), (25, 29), (26, 29)
    ]
    TURN_SPACES = [
        (12, 6), (92, 6), (188, 6), (237, 6), (332, 6), (412, 6),
        (12, 71), (92, 71), (140, 71), (188, 71), (237, 71), (284, 71), (332, 71), (412, 71),
        (12, 119), (92, 119), (140, 119), (188, 119), (237, 119), (284, 119), (332, 119), (412, 119),
        (140, 166), (188, 166), (237, 166), (284, 166),
        (92, 214), (140, 214), (284, 214), (332, 214),
        (140, 262), (284, 262),
        (12, 310), (92, 310), (140, 310), (188, 310), (237, 310), (284, 310), (332, 310), (412, 310),
        (12, 360), (44, 360), (92, 360), (92, 360), (140, 360), (188, 360), (237, 360), (284, 360), (332, 360), (380, 360), (412, 360),
        (332, 408),
        (12, 406), (44, 406), (92, 406), (140, 406), (188, 406), (237, 406), (284, 406), (332, 406), (380, 406), (412, 406),
        (12, 454), (188, 454), (237, 454), (412, 454)
    ]
    GHOST_HOUSE_TURN_SPACE = (212, 166)

    LEFT_LOOP_SPACE = (-2, 14)

    RIGHT_LOOP_SPACE = (30, 14)

    LOOP_AROUND_SPACES = [
        LEFT_LOOP_SPACE, RIGHT_LOOP_SPACE
    ]

    GHOST_SLOW_DOWN_SPACES = [
        (-1, 14), (0, 14), (1, 14), (2, 14), (3, 14), (4, 14),
        (29, 14), (28, 14), (27, 14), (26, 14), (25, 14), (24, 14)
    ]



    PELLETE_SPACES = [
        (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 1), (12, 1), (15, 1), (16, 1), (17, 1), (18, 1), (19, 1), (20, 1), (21, 1), (22, 1), (23, 1), (24, 1), (25, 1), (26, 1),
        (1, 2), (6, 2), (12, 2), (15, 2), (21, 2), (26, 2),
        (6, 3), (12, 3), (15, 3), (21, 3),
        (1, 4), (6, 4), (12, 4), (15, 4), (21, 4), (26, 4),
        (1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5), (14, 5), (15, 5), (16, 5), (17, 5), (18, 5), (19, 5), (20, 5), (21, 5), (22, 5), (23, 5), (24, 5), (25, 5), (26, 5),
        (1, 6), (6, 6), (9, 6), (18, 6), (21, 6), (26, 6),
        (1, 7), (6, 7), (9, 7), (18, 7), (21, 7), (26, 7),
        (1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (9, 8), (10, 8), (11, 8), (12, 8), (15, 8), (16, 8), (17, 8), (18, 8), (21, 8), (22, 8), (23, 8), (24, 8), (25, 8), (26, 8),
        (6, 9), (21, 9),
        (6, 10), (21, 10),
        (6, 11), (21, 11),
        (6, 12), (21, 12),
        (6, 13), (21, 13),

        # Center pass lane
        (6, 14), (21, 14),

        (6, 15), (21, 15),
        (6, 16), (21, 16),
        (6, 17), (21, 17),
        (6, 18), (21, 18),
        (6, 19), (21, 19),
        (1, 20), (2, 20), (3, 20), (4, 20), (5, 20), (6, 20), (7, 20), (8, 20), (9, 20), (10, 20), (11, 20), (12, 20), (15, 20), (16, 20), (17, 20), (18, 20), (19, 20), (20, 20), (21, 20), (22, 20), (23, 20), (24, 20), (25, 20), (26, 20),
        (1, 21), (6, 21), (12, 21), (15, 21), (21, 21), (26, 21),
        (1, 22), (6, 22), (12, 22), (15, 22), (21, 22), (26, 22),
        (2, 23), (3, 23), (6, 23), (7, 23), (8, 23), (9, 23), (10, 23), (11, 23), (12, 23), (15, 23), (16, 23), (17, 23), (18, 23), (19, 23), (20, 23), (21, 23), (24, 23), (25, 23),
        (3, 24), (6, 24), (9, 24), (18, 24), (21, 24), (24, 24),
        (3, 25), (6, 25), (9, 25), (18, 25), (21, 25), (24, 25),
        (1, 26), (2, 26), (3, 26), (4, 26), (5, 26), (6, 26), (9, 26), (10, 26), (11, 26), (12, 26), (15, 26), (16, 26), (17, 26), (18, 26), (21, 26), (22, 26), (23, 26), (24, 26), (25, 26), (26, 26),
        (1, 27), (12, 27), (15, 27), (26, 27),
        (1, 28), (12, 28), (15, 28), (26, 28),
        (1, 29), (2, 29), (3, 29), (4, 29), (5, 29), (6, 29), (7, 29), (8, 29), (9, 29), (10, 29), (11, 29), (12, 29), (13, 29), (14, 29), (15, 29), (16, 29), (17, 29), (18, 29), (19, 29), (20, 29), (21, 29), (22, 29), (23, 29), (24, 29), (25, 29), (26, 29)
    ]

    POWER_PELLETE_SPACES = [
        (1, 3), (26, 3),
        (1, 23), (26, 23),
    ]

    def __init__(self, rows, columns, board_position=(0, 0)):
        self.rows = rows
        self.columns = columns
        self.array = [
            [self.INVALID_SPACE for i in range(self.rows)] for j in range(self.columns)
        ]
        self.turn_spaces = {}
        self.loop_around_spaces = self.LOOP_AROUND_SPACES.copy()
        self.ghost_slow_down_spaces = self.GHOST_SLOW_DOWN_SPACES.copy()
        self.pellete_spaces = self.PELLETE_SPACES.copy()
        self.power_pellete_spaces = self.POWER_PELLETE_SPACES.copy()
        self.board_position = Vector2(board_position[0], board_position[1])
        self.ghost_house_turn_space = (
            self.GHOST_HOUSE_TURN_SPACE[0] + self.board_position.x,
            self.GHOST_HOUSE_TURN_SPACE[1] + self.board_position.y,
        )

        # Place valid space
        for x, y in self.VALID_SPACES:
            self.set(x, y, self.VALID_SPACE)

        for x, y, in self.TURN_SPACES:
            updated_x = x + self.board_position.x
            updated_y = y + self.board_position.y
            self.turn_spaces[(updated_x, updated_y)] = self.VALID_SPACE

    def get(self, x, y):
        try:
            return self.array[y][x]
        except IndexError:
            return self.INVALID_SPACE

    def set(self, x, y, value):
        self.array[y][x] = value

    def has_turn_space(self, x, y):
        if (x, y) in self.turn_spaces:
            return True
        else:
            return False

    def has_ghost_house_turn_space(self, x, y):
        return self.ghost_house_turn_space == (x, y)

    def has_loop_around_space(self, x, y):
        if (x, y) in self.loop_around_spaces:
            return True
        else:
            return False

    def has_ghost_slow_down_space(self, x, y):
        if (x, y) in self.ghost_slow_down_spaces:
            return True
        else:
            return False

    def get_pellete_spaces(self):
        return self.pellete_spaces

    def get_power_pellete_spaces(self):
        return self.power_pellete_spaces

    def convert_position_to_grid(self, position_x, position_y):
        grid_space_x = int((position_x - self.board_position.x) / 16)
        grid_space_y = int((position_y - self.board_position.y) / 16)
        return grid_space_x, grid_space_y

    def __str__(self):
        grid_string = ""
        for col in self.array:
            for row in col:
                grid_string += f"{row} "
            grid_string += "\n"
        return grid_string

    def __repr__(self):
        grid_string = ""
        for col in self.array:
            for row in col:
                grid_string += f"{row} "
            grid_string += "\n"
        return grid_string
